#include "raylib.h"

#define TILE_SIZE 40
#define MAP_WIDTH 10
#define MAP_HEIGHT 8

typedef struct {
    Vector2 position;
    bool active;
    float timer;
} Bomb;

int map[MAP_HEIGHT][MAP_WIDTH] = {
    {1, 1, 1, 1, 1, 1, 1, 1, 1, 1},
    {1, 0, 0, 0, 1, 0, 0, 0, 0, 1},
    {1, 0, 1, 0, 1, 0, 1, 1, 0, 1},
    {1, 0, 1, 0, 0, 0, 1, 0, 0, 1},
    {1, 0, 1, 1, 1, 0, 1, 1, 0, 1},
    {1, 0, 0, 0, 0, 0, 0, 0, 0, 1},
    {1, 0, 0, 1, 1, 1, 1, 0, 0, 1},
    {1, 1, 1, 1, 1, 1, 1, 1, 1, 1}
};

int main(void) {
    InitWindow(MAP_WIDTH * TILE_SIZE, MAP_HEIGHT * TILE_SIZE, "Bomberman - Raylib");
    SetTargetFPS(60);

    Vector2 player = { TILE_SIZE, TILE_SIZE };
    float speed = 2.0f;
    Bomb bomb = {0};

    while (!WindowShouldClose()) {
        // 🕹 Movimentação do jogador
        Vector2 newPos = player;
        if (IsKeyDown(KEY_RIGHT)) newPos.x += speed;
        if (IsKeyDown(KEY_LEFT))  newPos.x -= speed;
        if (IsKeyDown(KEY_DOWN))  newPos.y += speed;
        if (IsKeyDown(KEY_UP))    newPos.y -= speed;

        // 🚧 Colisão com paredes
        int tileX = newPos.x / TILE_SIZE;
        int tileY = newPos.y / TILE_SIZE;
        if (map[tileY][tileX] == 0) player = newPos;

        // 💣 Plantar bomba
        if (IsKeyPressed(KEY_SPACE) && !bomb.active) {
            bomb.position = (Vector2){ (int)(player.x / TILE_SIZE) * TILE_SIZE, (int)(player.y / TILE_SIZE) * TILE_SIZE };
            bomb.active = true;
            bomb.timer = 3.0f;
        }

        // 💥 Explosão da bomba
        if (bomb.active) {
            bomb.timer -= GetFrameTime();
            if (bomb.timer <= 0) {
                bomb.active = false;
                map[(int)bomb.position.y / TILE_SIZE][(int)bomb.position.x / TILE_SIZE] = 0; // Remove parede
            }
        }

        // 🎨 Renderização
        BeginDrawing();
        ClearBackground(RAYWHITE);

        // 🏗 Desenha o mapa
        for (int y = 0; y < MAP_HEIGHT; y++) {
            for (int x = 0; x < MAP_WIDTH; x++) {
                if (map[y][x] == 1)
                    DrawRectangle(x * TILE_SIZE, y * TILE_SIZE, TILE_SIZE, TILE_SIZE, DARKGRAY);
            }
        }

        // 👤 Desenha o jogador
        DrawRectangle(player.x, player.y, TILE_SIZE - 5, TILE_SIZE - 5, BLUE);

        // 💣 Desenha a bomba
        if (bomb.active)
            DrawCircle(bomb.position.x + TILE_SIZE / 2, bomb.position.y + TILE_SIZE / 2, 10, BLACK);

        EndDrawing();
    }

    CloseWindow();
    return 0;
}
